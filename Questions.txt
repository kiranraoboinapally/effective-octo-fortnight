1a.Swapping Two numbers using third variable(without scanner )?
fileName= swap.java
1b.Swapping Two numbers without using third variable()

1c.Swapping  two numbers using  Bitwise XOR

2.Write a Java program that takes a character as input and classifies it as either a "Capital Letter", "Small Letter", or "Special Symbol". 
If the character is between 'A' and 'Z', print "Capital Letter"; if it's between 'a' and 'z', print "Small Letter"; otherwise, print "Special Symbol". 
How would you implement this logic?
fileName= char.java

3.Input is even number or odd?
fileName= loc.java

4.Accept a person age as input and check whether is a major or minor or senior citizen?
fileName= age.java

5.Accept a number as input if its divisible by 3 print fizz,if its divisible by 5 print buzz,
if its both print fizz and buzz?
fileName=fb.java

6.Switch Case to do ???why break & why continue?? why not if else??

7.Take age as input and check whether it is +ve or -ve.If it is +ve check age>18
print eligible for job if age>21 print he is eligible for upsc
if he is>18 & <21 eligible for ssc exams if age<18 he is not eligible to apply?

8.Take 3 numbers as input and find the largest among them?
fileName=   large.java

9.using ternary operator to add or subtract?
fileName= terny.java

10.
fileName= w1.java

11.
fileName= w2.java

12.
fileName= w3.java

13.
fileName= w4.java

14.
fileName= w5.java

15.
pre1.java


----------------------------------------LOOPS------------------------------------------------
*******WHILE*******
16.Print 3 table as 3X1=3......3X10=30
fileName=t1.java

17.Print 3 table and find the result is prime or not?
fileName= .java

18.Check the result is even or odd?
3X1=3 odd 3X2=6 even......
fileName= .java

19.Check how many even numbers in 3 table and odd numbers
print even numbers are 5
print odd numbers are 5
fileName= .java

20.Take num=3 as input 
if the input is even then num=num/2 else if input is odd num=3*num+1
output 10 5 16 8 4 2 1
fileName= collatzConjecture.java in loop/while folder

21.Fibonacci Series if input a=0 and b=1 then output
0 1 1 2 3 5 8 13 21 34 //c=a+b
fileName= fibo.java in loops/while folder


22.Power a number without using Math.pow()
fileName= powe.java in loops/while folder


23.Print only Last digit in the range of 10 to 20 numbers
fileName= l1.java in loops/while folder



24.Print Square roots of 1 to 10 numbers
fileName= sqrt.java in loops/while folder


25.Print perfect square numbers in the range of 1 to 100
fileName= persq.java in loops/while folder


26.Print Leap Years in the range of 1900 to 2024
fileName= leap.java in loops/while folder


27.Print fizz and buzz i.e divisible by 3 and 5 in the range of 1000 to 100 print with numbers as fizz and buzz
fileName= fizzBuzz.java in loops/while folder


28.Sum of Even numbers in 1 to 100 range
fileName= sumEven.java in loops/while folder


29.nCr Problem
fileName= nCr.java


30.Factors of a number
fileName= factors.java


31.Perfect Number find Factors of a number and sum those factors  
Example factors for 6 are 1,2,3 not including 6 then adding those numbers 1+2+3=6 taken input are equal said to be perfect number
fileName= per.java



32.Count Number of Factors to a taken input
fileName= factorsCount.java in Loop/while folder


33.Check whether taken input is a prime or not?
fileName= prime.java


34.take input as any number example 20
output 20 19 18 17.....11 1 2 3.....10
fileName= decrementIncrement.java



35.Highest Factor of a taken number other than that?
fileName= hf.java



36.HCF of two numbers
fileName= hcf.java in loops/while



----------------------------------------EXTRACTION------------------------------------------------
*******FOR*******

% gives Remainder
/ gives Quotient

num= 154;
rem=num%10; //4 5 1
sys(rem;)
num/=10; //15 1 0

37.Take input as any number example 1432 then extract and add all of it like 3+2+4+1
fileName= extractSum.java in loops/for folder


38.I am Strong numbers 153,370,371,407
take any number as input and find its armstrong or not?
Example:153 -->3^3+5^3+1^3=153 based on number of digits power it to the given all numbers.
fileName= armstrongWithOutCount.java


39.Take input as any number 
Example : 8765876 Sum of even digits ,product of odd digits
fileName= evenSum.java in loops/for folder



40.Largest and Smallest Digit in a taken Input 1234556
fileName= .java  same question as 46 question


41.Reversing a given input 123 i.e 321 again 123
fileName= reverseNumWithoutZero.java


42a.Taken Input number=75467 print as 7 5 4 6 7
b. and add even positons only i.e 6+5=11
fileName= .java


43.If i give input as 12300 it should print as 1 2 3 0 0
fileName= reverseNumWithZero.java



44.Palindrome Number or not?
fileName= palindrome.java



45.Palindrome Prime or not?
fileName= palindromePrime.java 


46.Minimum and maximum in a given input number as example input is 1278689 i need to print min is 1 max is 9
fileName= .java



47.Second Minimum Value and Maximum value in a given input if having repeated value also?
fileName= secondMin.java in loops/for folder


48.Twin Primes?
fileName= twinPrimes.java



49.Armstrong prime or not??
fileName= .java





java.lang is default pkg in java


50.Check whether a number is a twisted prime or not?
fileName= .java




//Using for loops?


51.Write a program with for loop to print as 
1 1
1 2
1 3
1 4
2 1
2 2 
2 3
2 4
fileName= .java



52.prime range in 1 to 100 numbers?
fileName= .java




53.Palindrome range from 1 to 100 numbers?
fileName= .java



54.Factorial in range from 1 to 100 numbers?
fileName= .java


55.Armstrong range in 1 to 10000 numbers?
fileName= .java


56.Print tables 1 to 10 as 1X10=10 1X9==9......1X1=1
..........................10X10=100...........10X1=10
fileName= .java


57.Print all the prime numbers in taken input number
example num=987635 then print 5,3,7 are prime numbers
fileName= digitPrime.java


58.A number having even number of digits then split to half and add both of it
example 456787 i.e 456+787
fileName= splitSum.java




--------Patterns--------
****Rectangle or Square****
59.             
# # # # # 
# # # # # 
# # # # # 

60. 
# # # # 
# $ # $
# # # # 
# $ # #

61.                              62.
# # # # #                        # # # # #
$ $ $ $ $                        $ $ $ $ $ 
# # # # #                        $ $ $ $ $
$ $ $ $ $                        $ $ $ $ $
# # # # #                        # # # # #


63.                              64.
# # # # #                        # # # # # 
# $ $ $ #                        #       #
# $ $ $ #                        #       #
# $ $ $ #                        #       #
# # # # #                        # # # # #


65.                              66.
# $ $ $ $                        $ $ $ $ #
$ # $ $ $                        $ $ $ # $
$ $ # $ $                        $ $ # $ $
$ # $ $ $                        $ # $ $ $
# $ $ $ $                        # $ $ $ $


67.                              68.a                               68.b
1 1 1 1 1                        1 2 3 4 5                          1 2 3 4 5
2 2 2 2 2                        1 2 3 4 5                          1       5
3 3 3 3 3                        1 2 3 4 5                          1       5
4 4 4 4 4                        1 2 3 4 5                          1 2 3 4 5


69.                              70.                                71.
1 # # #                          # # # 1                            1 # # 1
# 2 # #                          # # 2 #                            # 2 2 #
# # 3 #                          # 3 # #                            # 3 3 #
# # # 4                          4 # # #                            4 # # 4


72.                              73.                                74.
5 5 5 5 5                        5 4 3 2 1                          1 # # # 1
4 4 4 4 4                        5 4 3 2 1                          # 2 # 2 #
3 3 3 3 3                        5 4 3 2 1                          # # 3 # #
2 2 2 2 2                        5 4 3 2 1                          # 4 # 4 #
1 1 1 1 1                        5 4 3 2 1                          5 # # # 5


75.                              76.                                77.
1 2 3                            1 2 3 4                            A A A A A
4 5 6                            2 3 4 5                            B B B B B
7 8 9                            3 4 5 6                            C C C C C
                                 4 5 6 7                            D D D D D


78.                              79.                                80.
A B C D                          A B C D                            A B C D
A B C D                          E F G H                            B C D E
A B C D                          I J K L                            C D E F


****Triangle patterns****

81.                              82.                                83.
#                                #                                  1
# #                              # #                                1 2
# # #                            # $ #                              1 2 3
# # # #                          # $ $ #                            1 2 3 4
# # # # #                        # # # # #                          1 2 3 4 5 



84.                              85.                                86.
1                                1                                  1
2 1                              2 3                                1 2
3 2 1                            4 5 6                              1   2
4 3 2 1                          7 8 9 10                           1     2
5 4 3 2 1                                                           1 2 3 4 5



87.                              88.                                89.
1                                # # # # #                          A B C D E
2 1                              # # # #                            a b c d
3   1                            # # #                              C D E
4     1                          # #                                c d
5 4 3 2 1                        #                                  E



90.                              91.                                92.
1 2 3 4 5                        1 2 3 4 5                                   $
2 1 0 -1                         5 4 3 2                                   $ $
3 4 5                            5 6 7                                   $ $ $
4 3                              2 1                                   $ $ $ $
5                                7                                   $ $ $ $ $


93.                              94.                                95.
$ $ $ $ $                                $                          $ $ $ $ $
  $ $ $ $                              $ $                            $     $
    $ $ $                            $   $                              $   $
      $ $                          $     $                                $ $
        $                        $ $ $ $ $                                  $


96.






--------Methods--------






--------Recursion--------







--------ARRAYS------------
1.Run Time Initialization(forward and backward insertion)
runTimeInit.java


2.Compile Time Initialization
CompileTimeInit.java


3.a[] array elements are copying into b[] with same size
copyAB.java


4.a[] array elements let it be {1,2,3,4,5}
b[] array elements should become{5,4,3,2,1}
reverseStoringAB.java


5.a[] array elements let it be {10,30,20,50,40}
b[] array elements let it be{10,30,30,40}
c[] array elements a[] and b[] i.e {10,30,20,50,40,10,30,30,40}
storingABc.java


6a.Max element in an array
maxElement.java
6b.Min element in an array
minElement.java


7.Linear search in an array of elements finding the element exists or not in it
linearSearch.java



8.In an array a[]={10,12,19,15,23,24,27,36,55} arrange first even elements in an array b[] of same size to a[] array then next odd elements  store after even elements
evenOddSort.java problem pending



9.Second Maximum Element in an array a[]={10,12,19,15,23,24,27} without sorting
secondMax.java


10.
Given an array a[] of size n, create a new array b[] using the following rules:

a. The first element of b[] is the sum of the first and second elements of a[].
b. Each middle element of b[] is the sum of the previous and next elements from the corresponding index in a[].
c. The last element of b[] is the sum of the last and second-last elements of a[].

Write a function that transforms the array a[] into b[] based on these rules.
a[]={10,20,30,40,50} then 
b[]={30,40,60,80,90} 
arrayTransformation.java



11.
Given an array a[]  of integers, create a new array b[] where each element b[i] is the quotient of the sum of all elements in `a[]` excluding `a[i]` divided by `a[i]`.
For example, for a[] = {10, 20, 30, 40, 50}, the output b[] should be {14, 6, 4, 2, 2}.
arrayOperation.java

Explanation:
b[0] = (20 + 30 + 40 + 50) / 10 = 140 / 10 = 14
b[1] = (10 + 30 + 40 + 50) / 20 = 130 / 20 = 6
b[2] = (10 + 20 + 40 + 50) / 30 = 120 / 30 = 4
b[3] = (10 + 20 + 30 + 50) / 40 = 110 / 40 = 2
b[4] = (10 + 20 + 30 + 40) / 50 = 100 / 50 = 2




________________________________



test questions 

strong number or not 
if I take input as 145 then 5!+4!+1!==input? 
print strong else not strong

evil number take 9 input square it gets 81 then 8+1==input? print evil else not evil

power number take 132 as input then do 1*3*2==1+3+2?print power number else not a power number


print first 10 prime numbers i.e, printing upto 29


1 2 3 4 5
  2 3 4 5
    3 4 5
      4 5
        5


take 76 as input count is two digits so square it and gets 5776 based on input count square value take it as last two digits check it with input if both are equal then print it's automatic number else not


take 2025 as input then split into half 20+25=45 then 45*45 we get 2025==input? print technology number else not technology number




optional practice questions
input 17453 do 1+5+3 and 7+4
input 17543 then 3^1+4^2+5^3+7^4+1^5
input 1678 then 16+78
all exam questions
prime digits of a number 28753 outputs 3 8 7 5 2










This is.........nmnhhGh